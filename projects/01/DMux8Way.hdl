// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in = sel[0], out = notSel0);
	Not(in = sel[1], out = notSel1);
	Not(in = sel[2], out = notSel2);
	
	And(a = in, b = notSel2, out = andInNotSel2);
	
	// a = And(And(in, Not(sel[2])), And(Not(sel[1]), Not(sel[0])))
	
	And(a = notSel1, b = notSel0, out = andNotSel1NotSel2);
	And(a = andInNotSel2, b = andNotSel1NotSel2, out = a);
	
	// b = And(And(in, Not(sel[2])), And(Not(sel[1]), sel[0]))
	
	And(a = notSel1, b = sel[0], out = andNotSel1Sel0);
	And(a = andInNotSel2, b = andNotSel1Sel0, out = b);
	
	// c = And(And(in, Not(sel[2])), And(sel[1], Not(sel[0])))
	
	And(a = sel[1], b = notSel0, out = andSel1NotSel0);
	And(a = andInNotSel2, b = andSel1NotSel0, out = c);
	
	// d = And(And(in, Not(sel[2])), And(sel[1], sel[0]))
	
	And(a = sel[1], b = sel[0], out = andSel1Sel0);
	And(a = andInNotSel2, b = andSel1Sel0, out = d);
	
	
	And(a = in, b = sel[2], out = andInSel2);
	
	// e = And(And(in, sel[2]), And(Not(sel[1]), Not(sel[0])))
	
	And(a = andInSel2, b = andNotSel1NotSel2, out = e);
	
	// f = And(And(in, sel[2]), And(Not(sel[1]), sel[0]))
	
	And(a = andInSel2, b = andNotSel1Sel0, out = f);
	
	// g = And(And(in, sel[2]), And(sel[1], Not(sel[0])))
	
	And(a = andInSel2, b = andSel1NotSel0, out = g);
	
	// h = And(And(in, sel[2]), And(sel[1], sel[0]))
	
	And(a = andInSel2, b = andSel1Sel0, out = h);
}
function PongGame.new 5
push constant 9
call Memory.alloc 1
pop pointer 0
push constant 10
pop local 2
push constant 70
pop local 3
push constant 5
pop local 0
push constant 256
push local 3
sub
push constant 2
call Math.divide 2
pop local 1
push local 0
push local 1
push local 2
push local 3
call Paddle.new 4
pop this 0
push constant 512
push local 0
sub
push local 2
sub
push local 1
push local 2
push local 3
call Paddle.new 4
pop this 1
push constant 4
pop local 4
push constant 512
push local 4
sub
push constant 2
call Math.divide 2
push constant 256
push local 4
sub
push constant 2
call Math.divide 2
push local 4
call Ball.new 3
pop this 4
push constant 1
neg
pop this 5
push constant 1
neg
pop this 6
push pointer 0
return
function PongGame.start 1
push argument 0
pop pointer 0
push constant 0
pop this 8
label WHILE_EXP0
push this 8
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
push this 8
not
and
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call PongGame.move 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push pointer 0
push local 0
call PongGame.paddleDirection 2
pop temp 0
label WHILE_EXP2
push local 0
push constant 0
eq
not
push this 8
not
and
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call PongGame.move 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PongGame.paddleDirection 0
push argument 0
pop pointer 0
push argument 1
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 3
label IF_FALSE0
push argument 1
push constant 133
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 3
label IF_FALSE1
push argument 1
push constant 87
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 2
label IF_FALSE2
push argument 1
push constant 83
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop this 2
label IF_FALSE3
push argument 1
push constant 81
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop this 8
label IF_FALSE4
push constant 0
return
function PongGame.move 0
push argument 0
pop pointer 0
push this 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Paddle.moveUp 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
call Paddle.moveDown 1
pop temp 0
label IF_END0
push this 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Paddle.moveUp 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 1
call Paddle.moveDown 1
pop temp 0
label IF_END1
push pointer 0
call PongGame.moveBall 1
pop temp 0
push constant 10
call Sys.wait 1
pop temp 0
push constant 0
return
function PongGame.moveBall 0
push argument 0
pop pointer 0
push constant 512
push this 4
call Ball.getSize 1
sub
push this 5
call Math.abs 1
sub
push this 4
call Ball.getX 1
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 7
push constant 0
not
pop this 8
push constant 0
return
label IF_FALSE0
push constant 0
push this 4
call Ball.getX 1
lt
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop this 7
push constant 0
not
pop this 8
push constant 0
return
label IF_FALSE1
push constant 256
push this 4
call Ball.getSize 1
sub
push this 6
call Math.abs 1
sub
push this 4
call Ball.getY 1
gt
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 6
neg
pop this 6
label IF_FALSE2
push constant 0
push this 4
call Ball.getY 1
lt
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
neg
pop this 6
label IF_FALSE3
push this 4
call Ball.getX 1
push this 0
call Paddle.getX 1
push this 0
call Paddle.getWidth 1
add
gt
not
push pointer 0
push this 4
push this 0
call PongGame.ballInPaddle 3
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 5
neg
pop this 5
label IF_FALSE4
push this 4
call Ball.getX 1
push this 4
call Ball.getSize 1
add
push this 5
call Math.abs 1
sub
push this 1
call Paddle.getX 1
lt
not
push pointer 0
push this 4
push this 1
call PongGame.ballInPaddle 3
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 5
neg
pop this 5
label IF_FALSE5
push this 4
push this 5
push this 6
call Ball.moveDirection 3
pop temp 0
push constant 0
return
function PongGame.ballInPaddle 0
push argument 0
pop pointer 0
push argument 2
call Paddle.getY 1
push argument 1
call Ball.getY 1
push argument 1
call Ball.getSize 1
add
gt
not
push argument 2
call Paddle.getY 1
push argument 2
call Paddle.getHeight 1
add
push argument 1
call Ball.getY 1
lt
not
and
return
function PongGame.getWinner 0
push argument 0
pop pointer 0
push this 7
return
function PongGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Paddle.dispose 1
pop temp 0
push this 1
call Paddle.dispose 1
pop temp 0
push this 4
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
